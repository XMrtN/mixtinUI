---
import Card from "@/components/app/Card.astro";
import CodeBlock from "@/components/app/CodeBlock";
import Footer from "@/components/app/Footer.astro";
import Check from "@/components/icons/check.astro";
import Copy from "@/components/icons/copy.astro";
import DocsLayout from "@/layouts/DocsLayout.astro";
import type { GetStaticPaths } from "astro";
import { Code } from "astro:components";

export const getStaticPaths = (async () => {
  const files: any = await Astro.glob("@/data/*.ts");

  const paths = files.flatMap((file: typeof files) => {
    const tag = Object.keys(file)[0];

    return file[tag].components.map((component: typeof files, i: number) => {
      const id = (i + 1).toString();

      return {
        params: { tag, id },
        props: { component },
      };
    });
  });

  return paths;
}) satisfies GetStaticPaths;

const { tag, id } = Astro.params;
const { component } = Astro.props;
---

<DocsLayout>
  <Card transition:name={`card-${id}`}>
    <Fragment set:html={(component as any)[0].code} />
  </Card>
  {
    (component as any).map((item: any) => (
      <CodeBlock client:only="react" code={item.code} title={item.title}>
        <Code
          slot="codeComponent"
          class="rounded-md p-6"
          code={item.code}
          lang="astro"
        />
        <Copy slot="copyIcon" class="size-5" />
        <Check slot="checkIcon" class="size-5" />
      </CodeBlock>
    ))
  }

  {
    tag === "buttons" && (
      <Footer class="-mx-4">
        Button by
        <a
          href="https://buttons.ibelick.com/"
          target="_blank"
          rel="noopener noreferrer"
          class="hover:underline"
          slot="link"
        >
          ibelick
        </a>
      </Footer>
    )
  }
</DocsLayout>
