---
import Card from "@/components/app/Card.astro";
import CodeBlock from "@/components/app/CodeBlock";
import Footer from "@/components/app/Footer.astro";
import Check from "@/components/icons/check.astro";
import Copy from "@/components/icons/copy.astro";
import DocsLayout from "@/layouts/DocsLayout.astro";
import { Code } from "astro:components";
import { eq, db } from "astro:db";
import { Schemas } from "db/schemas";

const { tag, id } = Astro.params;

if (!id) return;

const componentDB = await db
  .select()
  .from(Schemas[tag as keyof typeof Schemas])
  .where(eq(Schemas[tag as keyof typeof Schemas].id, id));
---

<DocsLayout>
  <Card transition:name={`card-${id}`}>
    <Fragment set:html={componentDB[0].tailwindCode} />
  </Card>

  {
    Object.entries(componentDB[0]).map(([title, code]) => {
      if (title === "id" || code == null) return;
      return (
        <CodeBlock client:only="react" code={code} title={title}>
          <Code
            slot="codeComponent"
            class="rounded-md p-6"
            code={code || ""}
            lang="astro"
          />
          <Copy slot="copyIcon" class="size-5" />
          <Check slot="checkIcon" class="size-5" />
        </CodeBlock>
      );
    })
  }

  {
    tag === "buttons" && (
      <Footer class="-mx-4">
        Button by
        <a
          href="https://buttons.ibelick.com/"
          target="_blank"
          rel="noopener noreferrer"
          class="hover:underline"
          slot="link"
        >
          ibelick
        </a>
      </Footer>
    )
  }
</DocsLayout>
